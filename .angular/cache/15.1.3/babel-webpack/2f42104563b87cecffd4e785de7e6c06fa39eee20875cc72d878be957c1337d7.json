{"ast":null,"code":"import { switchMap, tap } from 'rxjs/operators';\nimport { environment } from './../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./../services/token.service\";\nexport class AuthService {\n  constructor(http, tokenService) {\n    this.http = http;\n    this.tokenService = tokenService;\n    this.apiUrl = `${environment.API_URL}/api/auth`;\n  }\n  login(email, password) {\n    return this.http.post(`${this.apiUrl}/login`, {\n      email,\n      password\n    }).pipe(tap(response => this.tokenService.saveToken(response.access_token)));\n  }\n  getProfile() {\n    return this.http.get(`${this.apiUrl}/profile`);\n  }\n  loginAndGet(email, password) {\n    return this.login(email, password).pipe(switchMap(() => this.getProfile()));\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,SAAS,EAAEC,GAAG,QAAQ,gBAAgB;AAE/C,SAASC,WAAW,QAAQ,kCAAkC;;;;AAQ9D,OAAM,MAAOC,WAAW;EAItBC,YACUC,IAAgB,EAChBC,YAA0B;IAD1B,SAAI,GAAJD,IAAI;IACJ,iBAAY,GAAZC,YAAY;IAJd,WAAM,GAAG,GAAGJ,WAAW,CAACK,OAAO,WAAW;EAK9C;EAEJC,KAAK,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAO,GAAG,IAAI,CAACC,MAAM,QAAQ,EAAE;MAACH,KAAK;MAAEC;IAAQ,CAAC,CAAC,CACrEG,IAAI,CACHZ,GAAG,CAACa,QAAQ,IAAI,IAAI,CAACR,YAAY,CAACS,SAAS,CAACD,QAAQ,CAACE,YAAY,CAAC,CAAC,CACpE;EACH;EAEAC,UAAU;IACR,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAO,GAAG,IAAI,CAACN,MAAM,UAAU,CAAC;EACtD;EAEAO,WAAW,CAACV,KAAa,EAAEC,QAAgB;IACzC,OAAO,IAAI,CAACF,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,CACjCG,IAAI,CACHb,SAAS,CAAC,MAAM,IAAI,CAACiB,UAAU,EAAE,CAAC,CACnC;EACH;;;mBAzBWd,WAAW;AAAA;;SAAXA,WAAW;EAAAiB,SAAXjB,WAAW;EAAAkB,YAFV;AAAM","names":["switchMap","tap","environment","AuthService","constructor","http","tokenService","API_URL","login","email","password","post","apiUrl","pipe","response","saveToken","access_token","getProfile","get","loginAndGet","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Flavio\\Desktop\\ANGULAR\\angular-router\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\n\r\nimport { environment } from './../../environments/environment';\r\nimport { Auth } from './../models/auth.model';\r\nimport { User } from './../models/user.model';\r\nimport { TokenService } from './../services/token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private apiUrl = `${environment.API_URL}/api/auth`;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private tokenService: TokenService\r\n  ) { }\r\n\r\n  login(email: string, password: string) {\r\n    return this.http.post<Auth>(`${this.apiUrl}/login`, {email, password})\r\n    .pipe(\r\n      tap(response => this.tokenService.saveToken(response.access_token))\r\n    );\r\n  }\r\n\r\n  getProfile() {\r\n    return this.http.get<User>(`${this.apiUrl}/profile`);\r\n  }\r\n\r\n  loginAndGet(email: string, password: string) {\r\n    return this.login(email, password)\r\n    .pipe(\r\n      switchMap(() => this.getProfile()),\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}