{"ast":null,"code":"import { HttpContext, HttpContextToken } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nconst CHECK_TIME = new HttpContextToken(() => false);\nexport function checkTime() {\n  return new HttpContext().set(CHECK_TIME, true);\n}\nexport class TimeInterceptor {\n  constructor() {}\n  intercept(request, next) {\n    if (request.context.get(CHECK_TIME)) {\n      const start = performance.now();\n      return next.handle(request).pipe(tap(() => {\n        const time = performance.now() - start + 'ms';\n        console.log(request.url, time);\n      }));\n    }\n    return next.handle(request);\n  }\n}\nTimeInterceptor.ɵfac = function TimeInterceptor_Factory(t) {\n  return new (t || TimeInterceptor)();\n};\nTimeInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TimeInterceptor,\n  factory: TimeInterceptor.ɵfac\n});","map":{"version":3,"mappings":"AACA,SAKEA,WAAW,EACXC,gBAAgB,QACX,sBAAsB;AAE7B,SAASC,GAAG,QAAQ,gBAAgB;;AAEpC,MAAMC,UAAU,GAAG,IAAIF,gBAAgB,CAAU,MAAM,KAAK,CAAC;AAE7D,OAAM,SAAUG,SAAS;EACvB,OAAO,IAAIJ,WAAW,EAAE,CAACK,GAAG,CAACF,UAAU,EAAE,IAAI,CAAC;AAChD;AAGA,OAAM,MAAOG,eAAe;EAE1BC,eAAe;EAEfC,SAAS,CAACC,OAA6B,EAAEC,IAAiB;IACxD,IAAID,OAAO,CAACE,OAAO,CAACC,GAAG,CAACT,UAAU,CAAC,EAAE;MACnC,MAAMU,KAAK,GAAGC,WAAW,CAACC,GAAG,EAAE;MAC/B,OAAOL,IAAI,CACVM,MAAM,CAACP,OAAO,CAAC,CACfQ,IAAI,CACHf,GAAG,CAAC,MAAK;QACP,MAAMgB,IAAI,GAAIJ,WAAW,CAACC,GAAG,EAAE,GAAGF,KAAK,GAAI,IAAI;QAC/CM,OAAO,CAACC,GAAG,CAACX,OAAO,CAACY,GAAG,EAAEH,IAAI,CAAC;MAChC,CAAC,CAAC,CACH;;IAEH,OAAOR,IAAI,CAACM,MAAM,CAACP,OAAO,CAAC;EAC7B;;;mBAjBWH,eAAe;AAAA;;SAAfA,eAAe;EAAAgB,SAAfhB,eAAe;AAAA","names":["HttpContext","HttpContextToken","tap","CHECK_TIME","checkTime","set","TimeInterceptor","constructor","intercept","request","next","context","get","start","performance","now","handle","pipe","time","console","log","url","factory"],"sourceRoot":"","sources":["C:\\Users\\Flavio\\Desktop\\ANGULAR\\angular-router\\src\\app\\interceptors\\time.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpContext,\r\n  HttpContextToken,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nconst CHECK_TIME = new HttpContextToken<boolean>(() => false);\r\n\r\nexport function checkTime(){\r\n  return new HttpContext().set(CHECK_TIME, true)\r\n}\r\n\r\n@Injectable()\r\nexport class TimeInterceptor implements HttpInterceptor {\r\n\r\n  constructor() {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    if (request.context.get(CHECK_TIME)) {\r\n      const start = performance.now();\r\n      return next\r\n      .handle(request)\r\n      .pipe(\r\n        tap(() => {\r\n          const time = (performance.now() - start) + 'ms';\r\n          console.log(request.url, time);\r\n        })\r\n      );\r\n    }\r\n    return next.handle(request);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}